# from aiogram import Router, F, types
# from aiogram.fsm.context import FSMContext
# import logging
# from aiogram.types import Message
# from Bot_food.router.users.users_db import users_db
# from Bot_food.router.keyboards import main_menu
#
# router = Router()
# logger = logging.getLogger(__name__)
#
#
# @router.message(F.text == "/start")
# async def cmd_start(message: types.Message, state: FSMContext):
#     await state.clear()  # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–µ—Ä–µ–¥ —Å—Ç–∞—Ä—Ç–æ–º
#
#     user_id = message.from_user.id
#     username = message.from_user.username
#     username_display = f"@{username}" if username else "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–µ–∑ username"
#
#     if user_id not in users_db:
#         users_db.add(user_id)
#         logger.info(f"‚úÖ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: {user_id} ({username_display})")
#     else:
#         logger.info(f"üìå –£–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_id} ({username_display})")
#
#     greeting = f"üëã –ü—Ä–∏–≤–µ—Ç, {username_display}! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
#     await message.answer(greeting, reply_markup=main_menu)
#
#
# @router.message(F.text == "/check_users")
# async def check(message: Message):
#     await message.answer(f"üìä –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users_db)}")
#
#
# @router.message()
# async def default_handler(message: Message):
#     logger.info(f"‚ö†Ô∏è –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {message.from_user.id}: {message.text}")
#     await message.answer("ü§ñ –Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é.")
